float shuffle4(float v)
{
	if (v == 0.25) return 0.50;
    if (v == 0.50) return 0.25;
    return v;
}

float shuffle8(float v)
{
	if (v == 0.0) return 0.50;
    if (v == 0.125) return 0.75;
    if (v == 0.25) return 0.875;
    if (v == 0.375) return 0.0;
    if (v == 0.50) return 0.25;
    if (v == 0.625) return 0.125;
    if (v == 0.75) return 0.375;
    return v;
}

vec3 map(float row, float col1, float col2)
{
    float w = (shuffle8(col1) + shuffle8(row) + row) * 0.333;
	float r = w;
    float g = 1.0 - shuffle8(col1);
    float b = (shuffle4(row) + col2);
    return vec3(r, g, b) * 0.8;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	// domain [0.0, 1.0]
    vec2 uv = fragCoord.xy / iResolution.xy;
    
    vec2 rotr45 = vec2(uv.x + 0.25 * uv.y, uv.y);
    vec2 rotl45 = vec2(uv.x - 0.25 * uv.y, uv.y);
	
    // domain { 1, 2, 3, 4 }
    float row = (ceil(uv.y * 4.0) - 1.0) / 4.0;
    // domain { 1, 2, 3, 4, 5, 6, 7, 8 }
	float col1 = (ceil(rotr45.x * 8.0) - 1.0) / 8.0;
    float col2 = (ceil(rotl45.x * 8.0) - 1.0) / 8.0;
    
    vec3 mapped = map(row, col1, col2);
    
    
    vec4 disp = texture2D(iChannel0, uv * 1.2);
    disp = (disp) * 0.15;
    
    
    fragColor = (vec4(mapped.rgb, 1.0) - disp);
}


0.0     0.50
0.125	0.75
0.25	0.875
0.375	0.0
0.50	0.25
0.625	0.125
0.75	0.375
0.875

